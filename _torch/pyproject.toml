[tool.poetry]
name = "crystalvision"
version = "0.3.1"
description = "FFTCG Image Classification and Detection."
authors = ["Allonte <angelosheltie@gmail.com>"]
license = "MIT License"
readme = "../README.md"
packages = [{include = "crystalvision", from=".."}]

[tool.poetry.dependencies]
python = "3.11.*,<3.12"
pandas = ">=2.1.2"
tqdm = ">=4.66.1"
aiohttp = ">=3.8.6"
aiofiles = ">=23.2.1"
dogpile-cache = ">=1.3.1"
# gradio = "^4.39.0"
swifter = {extras = ["groupby"], version = ">=1.4.0"}
# playwright = "^1.47.0"

[tool.poetry.group.ml.dependencies]
keras = ">3.4.0"
keras-tuner = ">=1.4.5"
scikit-learn = ">=1.3.0"
scikit-image = ">=0.22.0"
pyarrow = ">=15.0.0"
Pillow = ">=10.1.0"
mlxtend = ">=0.23.0"
opencv-contrib-python-headless = ">=4.9.0.80"

[tool.poetry.group.torch.dependencies]
nvidia-cublas-cu12 = {version=">=12.1.3.1", source="nvidia"}
nvidia-cuda-nvrtc-cu12 = {version=">=12.1.105", source="nvidia"}
nvidia-cuda-runtime-cu12 = {version=">=12.1.105", source="nvidia"}
# nvidia-cudnn-cu12 = {version=">=9.1.1.17", source="nvidia"}
nvidia-cudnn-cu12 = {version=">=9.1.0.70", source="pytorch"}
nvidia-nvjitlink-cu12 = {version=">=12.3.101", source="nvidia"}
torch = {version=">=2.4.1+cu124", source="pytorch"}
torchvision = {version=">=0.19.1+cu124", source="pytorch"}
accimage = [
    {path = "./data/accimage-0.2.0-cp310-cp310-win_amd64.whl", platform="win32", python = "3.10.*"},
    {path = "./data/accimage-0.2.0-cp310-cp310-linux_x86_64.whl", platform="linux", python = "3.10.*,<3.11"},
    {path = "./data/accimage-0.2.0-cp311-cp311-linux_x86_64.whl", platform="linux", python = "3.11.*,<3.12"},
    {path = "./data/accimage-0.2.0-cp312-cp312-linux_x86_64.whl", platform="linux", python = "3.12.*"}
]

[tool.poetry.group.dev.dependencies]
pycodestyle = ">=2.11.1"
flake8 = ">=6.1.0"
pydocstyle = ">=6.3.0"
ipykernel = ">=6.26.0"
tensorboard = ">=2.11"
pre-commit = "^3.6.0"
black = ">=24.1.1"
ruff = ">=0.1.14"
pytest = ">=8.0.0"
pytest-xdist = ">=3.5.0"
debugpy = "^1.8.6"

[tool.poetry.group.debug.dependencies]
paretoset = ">=1.2.3"

[tool.poetry.group.labeling.dependencies]
pyqt5-qt5 = "<5.15.11"
pyqt5 = "^5.15.10"
labelme = ">=5.4.1"
labelme2yolo = ">=0.1.4"

[tool.poetry.group.detection.dependencies]
ultralytics = ">=8.1.11"
onnx = ">=1.12.0"
onnxsim = ">=0.4.33"
onnxslim = ">=0.1.31"
onnxruntime-gpu = {version=">=1.18.1", source="onnx-gpu"}
onnx-graphsurgeon = {version=">=0.5.2", source="nvidia"}
lapx = ">=0.5.2"
# ray = {extras = ["tune"], version = ">=2.9.2"}


[tool.poetry.group.lang.dependencies]
langchain = ">=0.3.1"
langchain-community = ">=0.3.1"
langchain-chroma = ">=0.1.4"
langchain-ollama = ">=0.2.0"
pypdf = ">=5.0.1"
playwright = ">=1.47.0"
jq = ">=1.8.0"

[tool.poetry.group.discord.dependencies]
discord-py = ">=2.4.0"


[[tool.poetry.source]]
name = "pytorch"
url = "https://download.pytorch.org/whl/cu124"
priority = "supplemental"

[[tool.poetry.source]]
name = "pytorch-nightly"
url = "https://download.pytorch.org/whl/nightly/cu124"
priority = "supplemental"

[[tool.poetry.source]]
name = "pytorch-base"
url = "https://download.pytorch.org/whl"
priority = "supplemental"

[[tool.poetry.source]]
name = "nvidia"
url = "https://pypi.nvidia.com/"
priority = "supplemental"

[[tool.poetry.source]]
name = "onnx-gpu"
url = "https://aiinfra.pkgs.visualstudio.com/PublicPackages/_packaging/onnxruntime-cuda-12/pypi/simple/"
priority = "supplemental"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.pytest.ini_options]
addopts = [
    "--dist=loadgroup",
    "-n=2"
]
pythonpath = ["src"]

[tool.ruff]
select = ["E", "F"]
ignore = ["E501"]

[tool.ruff.per-file-ignores]
"tests/*.py" = ["F811"]
